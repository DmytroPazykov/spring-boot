buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.1'
	}
}

allprojects {

	ext{
		junit4Version        = '4.12'
		junitVintageVersion  = '5.3.0'
		junitPlatformVersion = '1.1.1'
		junitJupiterVersion  = '5.3.0'
		log4jVersion         = '2.6.2'
	}

	version = "1.1.1"

	repositories {
		jcenter() // or Maven central, required for Lombok dependency
		mavenCentral()
	}

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.junit.platform.gradle.plugin'

	sourceCompatibility = 1.10

	dependencies {
		compile('org.springframework.boot:spring-boot-starter-data-jpa')
		compile('org.springframework.boot:spring-boot-starter-web')
		runtime('com.h2database:h2')
		testCompile('org.springframework.boot:spring-boot-starter-test')

		compile 'org.projectlombok:lombok:1.18.2'

		// JUnit Jupiter API and TestEngine implementation
		testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
		testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

		// If you also want to support JUnit 3 and JUnit 4 tests
		testCompile("junit:junit:${junit4Version}")
		testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")

		testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
		testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")

		// Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
		testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
	}

	junitPlatform {
		// platformVersion '1.0.0'
		filters {
			engines {
				// include 'junit-jupiter', 'junit-vintage'
				// exclude 'custom-engine'
			}
			tags {
				// include 'fast'
				exclude 'slow'
			}
			// includeClassNamePattern '.*Test'
		}
		// configurationParameter 'junit.jupiter.conditions.deactivate', '*'
		// enableStandardTestTask true
		// reportsDir file('build/test-results/junit-platform') // this is the default
		logManager 'org.apache.logging.log4j.jul.LogManager'
	}
}