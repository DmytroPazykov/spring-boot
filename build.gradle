buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.1'
    }
}

allprojects {

    ext {
        junitPlatformVersion = '1.1.1'
        junitJupiterVersion = '5.3.0'
        log4jVersion = '2.11.1'
        lombokVersion = '1.18.2'
    }

    repositories {
        jcenter() // or Maven central, required for Lombok dependency
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.junit.platform.gradle.plugin'

    sourceCompatibility = 1.10

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-data-jpa',
                'org.springframework.boot:spring-boot-starter-web',
                "org.projectlombok:lombok:$lombokVersion")

        runtime('com.h2database:h2')

        testCompile('org.springframework.boot:spring-boot-starter-test',
                'javax.xml.bind:jaxb-api')

        // JUnit Jupiter API and TestEngine implementation
        testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
        testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

        // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
        testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")

        testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}",
                "org.apache.logging.log4j:log4j-jul:${log4jVersion}")

    }

    junitPlatform {
        details 'verbose'
        logManager 'org.apache.logging.log4j.jul.CoreLoggerTest'
    }

}

test {

    useJUnitPlatform {
        includeTags 'demo'
        includeEngines 'junit-jupiter'
    }

    testLogging {
        showStandardStreams = true
        events 'passed', 'skipped', 'failed'
        exceptionFormat = "full"
    }

    reports {
        html.enabled = true
    }
}
