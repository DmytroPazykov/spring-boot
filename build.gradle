buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {

    ext {
        junitJupiterVersion = '5.4.0'
        log4jVersion = '2.11.1'
        lombokVersion = '1.18.6'
        apacheCommonsCollection = '4.3'
        apacheStringUtils = '3.8.1'
    }

    repositories {
        jcenter() // or Maven central, required for Lombok dependency
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.11

    dependencies {
        implementation('org.springframework.boot:spring-boot-starter-data-jpa',
                'org.springframework.boot:spring-boot-starter-web',
                "org.apache.commons:commons-collections4:$apacheCommonsCollection",
                "org.projectlombok:lombok:$lombokVersion",
                "org.apache.commons:commons-lang3:$apacheStringUtils")

        runtime('com.h2database:h2')

        testImplementation("org.junit.jupiter:junit-jupiter:$junitJupiterVersion",
                'org.springframework.boot:spring-boot-starter-test',
                'javax.xml.bind:jaxb-api')

        testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}",
                "org.apache.logging.log4j:log4j-jul:${log4jVersion}")

    }
}

test {

    useJUnitPlatform {
        includeTags 'unit'
    }

    testLogging {
        showStandardStreams = true
        events 'passed', 'skipped', 'failed'
        exceptionFormat = "full"
    }

    reports {
        html.enabled = true
    }
}
